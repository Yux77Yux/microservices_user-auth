syntax = "proto3";

package aggregator;

option go_package = "github.com/Yux77Yux/platform_backend/generated/aggregator";

import "google/api/annotations.proto";

import "aggregator/methods/login.proto";
import "aggregator/methods/space.proto";
import "aggregator/methods/watch.proto";

service AggregatorService {
  rpc Login(aggregator.methods.LoginRequest) returns (aggregator.methods.LoginResponse) {
    option (google.api.http) = {
      post: "/api/user/login"
      body: "user_credentials"
    };
  }

  rpc Space(aggregator.methods.SpaceRequest) returns (aggregator.methods.SpaceResponse) {
    option (google.api.http) = {
      get: "/api/space/{user_id}/{access_token.value=*}"
    };
  }

  rpc WatchCreation(aggregator.methods.WatchCreationRequest) returns (aggregator.methods.WatchCreationResponse) {
    option (google.api.http) = {
      get: "/api/watch/{creation_id}/{access_token.value=*}"
    };
  }
}