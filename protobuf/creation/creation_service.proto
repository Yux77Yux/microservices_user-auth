syntax = "proto3";

package creation;

option go_package = "github.com/Yux77Yux/platform_backend/generated/creation";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

import "creation/methods/post.proto";
import "creation/methods/update.proto";
import "creation/methods/get.proto";
import "creation/methods/delete.proto";

service CreationService {
  // POST
  rpc UploadCreation(creation.methods.UploadCreationRequest) returns (creation.methods.UploadCreationResponse) {
    option (google.api.http) = {
      post: "/api/creation"
      body: "*"
    };
  }

  // GET
  rpc GetCreation(creation.methods.GetCreationRequest) returns (creation.methods.GetCreationResponse) {
    option (google.api.http) = {
      get: "/api/creation/{creation_id}/{access_token.value=*}"
    };
  }

  // 作者的作品
  rpc GetSpaceCreationList(creation.methods.GetPublicCreationListRequest) returns (creation.methods.GetCreationListResponse);

  // 收藏夹
  rpc GetCollectionCreationList(creation.methods.GetSpecificCreationListRequest) returns (creation.methods.GetCreationListResponse) ;
  
  // 推荐列表在creation处获取，但写入由interaction负责，不够则发布事件进行重新计算
  // 主页
  rpc GetHomeCreationList(creation.methods.GetSpecificCreationListRequest) returns (creation.methods.GetCreationListResponse) ;
  // 相似列表在creation处获取，但写入由interaction负责，不存在则直接调取api然后直接返回，同时存入redis
  // 作品的相似作品列表
  rpc GetSimilarCreationList(creation.methods.GetPublicCreationListRequest) returns (creation.methods.GetCreationListResponse);

  // DELETE
  rpc DeleteCreation(creation.methods.DeleteCreationRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/creation/{creation_id}/{access_token.value=*}"
    };
  }

  // UPDATE
  rpc UpdateCreation(creation.methods.UpdateCreationRequest) returns (creation.methods.UpdateCreationResponse) {
    option (google.api.http) = {
      patch: "/api/creation"
      body: "*"
    };
  }
}