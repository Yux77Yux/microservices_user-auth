admin:
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901

static_resources:
  listeners:
    - name: yux_listen # 监听器名称
      address:
        socket_address:
          address: 0.0.0.0 # 监听所有 IP
          port_value: 8080 # 客户端请求的 REST 端口
      filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_http
              codec_type: AUTO
              http_filters:
                - name: envoy.filters.http.ext_authz
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                    grpc_service:
                      google_grpc:
                        target_uri: "${ENV_HOST}:50009"
                        stat_prefix: "ext_authz"
                    failure_mode_allow: false
                - name: envoy.filters.http.grpc_json_transcoder # 转换过滤器
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder
                    proto_descriptor: "/etc/envoy/descriptor.pb" # gRPC 描述文件路径
                    services:
                      - "auth.AuthService"  # 映射到 auth_service 集群
                      - "user.UserService"  # 映射到 user_service 集群
                    print_options:
                      add_whitespace: true
                      always_print_primitive_fields: true
                - name: envoy.filters.http.router # 路由过滤器
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              route_config:
                virtual_hosts:
                  # 虚拟主机名称，针对 auth 服务
                  - name: auth_service
                    domains: ["*"] # 匹配所有域名
                    routes:
                      - match:
                          prefix: "/api/auth/refresh" # 刷新 路径
                        typed_per_filter_config:
                          envoy.filters.http.ext_authz:
                            "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                            disabled: true # 禁用外部授权
                        route:
                          cluster: auth_service # 指定 gRPC auth 集群
                  - name: user_service
                    domains: ["localhost"] # 匹配所有域名
                    routes:
                      - match:
                          prefix: "/api/user/register" # 注册 路径
                        route:
                          cluster: user_service # 指定 gRPC auth 集群
                        typed_per_filter_config:
                          envoy.filters.http.ext_authz:
                            "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                            disabled: true # 禁用外部授权
                      - match:
                          prefix: "/api/user/login" # 登录 路径
                        route:
                          cluster: user_service # 指定 gRPC auth 集群
                        typed_per_filter_config:
                          envoy.filters.http.ext_authz:
                            "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                            disabled: true # 禁用外部授权
                      - match:
                          prefix: "/api/user/exit" # 登出 路径
                        route:
                          cluster: user_service # 指定 gRPC auth 集

  clusters:
    - name: user_service # gRPC auth 服务集群
      connect_timeout: 5s
      lb_policy: ROUND_ROBIN
      type: LOGICAL_DNS
      http2_protocol_options: {}
      load_assignment:
        cluster_name: user_service
        endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: ${ENV_HOST}
                    port_value: 50010
    - name: auth_service # gRPC auth 服务集群
      connect_timeout: 5s
      lb_policy: ROUND_ROBIN
      type: LOGICAL_DNS
      http2_protocol_options: {}
      load_assignment:
        cluster_name: auth_service
        endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: ${ENV_HOST}
                    port_value: 50020